/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.nuxeo.ecm.platform.importer.kafka.avro;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Message extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -534329386184676707L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Message\",\"namespace\":\"org.nuxeo.ecm.platform.importer.kafka.avro\",\"fields\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"path\",\"type\":\"string\"},{\"name\":\"folderish\",\"type\":\"boolean\"},{\"name\":\"properties\",\"type\":{\"type\":\"map\",\"values\":\"string\"}},{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"parent\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence title;
  @Deprecated public java.lang.CharSequence path;
  @Deprecated public boolean folderish;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> properties;
  @Deprecated public java.lang.CharSequence hash;
  @Deprecated public java.lang.CharSequence parent;
  @Deprecated public java.lang.CharSequence type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Message() {}

  /**
   * All-args constructor.
   * @param title The new value for title
   * @param path The new value for path
   * @param folderish The new value for folderish
   * @param properties The new value for properties
   * @param hash The new value for hash
   * @param parent The new value for parent
   * @param type The new value for type
   */
  public Message(java.lang.CharSequence title, java.lang.CharSequence path, java.lang.Boolean folderish, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> properties, java.lang.CharSequence hash, java.lang.CharSequence parent, java.lang.CharSequence type) {
    this.title = title;
    this.path = path;
    this.folderish = folderish;
    this.properties = properties;
    this.hash = hash;
    this.parent = parent;
    this.type = type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return title;
    case 1: return path;
    case 2: return folderish;
    case 3: return properties;
    case 4: return hash;
    case 5: return parent;
    case 6: return type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: title = (java.lang.CharSequence)value$; break;
    case 1: path = (java.lang.CharSequence)value$; break;
    case 2: folderish = (java.lang.Boolean)value$; break;
    case 3: properties = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 4: hash = (java.lang.CharSequence)value$; break;
    case 5: parent = (java.lang.CharSequence)value$; break;
    case 6: type = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'title' field.
   * @return The value of the 'title' field.
   */
  public java.lang.CharSequence getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(java.lang.CharSequence value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'path' field.
   * @return The value of the 'path' field.
   */
  public java.lang.CharSequence getPath() {
    return path;
  }

  /**
   * Sets the value of the 'path' field.
   * @param value the value to set.
   */
  public void setPath(java.lang.CharSequence value) {
    this.path = value;
  }

  /**
   * Gets the value of the 'folderish' field.
   * @return The value of the 'folderish' field.
   */
  public java.lang.Boolean getFolderish() {
    return folderish;
  }

  /**
   * Sets the value of the 'folderish' field.
   * @param value the value to set.
   */
  public void setFolderish(java.lang.Boolean value) {
    this.folderish = value;
  }

  /**
   * Gets the value of the 'properties' field.
   * @return The value of the 'properties' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getProperties() {
    return properties;
  }

  /**
   * Sets the value of the 'properties' field.
   * @param value the value to set.
   */
  public void setProperties(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.properties = value;
  }

  /**
   * Gets the value of the 'hash' field.
   * @return The value of the 'hash' field.
   */
  public java.lang.CharSequence getHash() {
    return hash;
  }

  /**
   * Sets the value of the 'hash' field.
   * @param value the value to set.
   */
  public void setHash(java.lang.CharSequence value) {
    this.hash = value;
  }

  /**
   * Gets the value of the 'parent' field.
   * @return The value of the 'parent' field.
   */
  public java.lang.CharSequence getParent() {
    return parent;
  }

  /**
   * Sets the value of the 'parent' field.
   * @param value the value to set.
   */
  public void setParent(java.lang.CharSequence value) {
    this.parent = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /**
   * Creates a new Message RecordBuilder.
   * @return A new Message RecordBuilder
   */
  public static org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder newBuilder() {
    return new org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder();
  }

  /**
   * Creates a new Message RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Message RecordBuilder
   */
  public static org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder newBuilder(org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder other) {
    return new org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder(other);
  }

  /**
   * Creates a new Message RecordBuilder by copying an existing Message instance.
   * @param other The existing instance to copy.
   * @return A new Message RecordBuilder
   */
  public static org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder newBuilder(org.nuxeo.ecm.platform.importer.kafka.avro.Message other) {
    return new org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder(other);
  }

  /**
   * RecordBuilder for Message instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Message>
    implements org.apache.avro.data.RecordBuilder<Message> {

    private java.lang.CharSequence title;
    private java.lang.CharSequence path;
    private boolean folderish;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> properties;
    private java.lang.CharSequence hash;
    private java.lang.CharSequence parent;
    private java.lang.CharSequence type;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.title)) {
        this.title = data().deepCopy(fields()[0].schema(), other.title);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.path)) {
        this.path = data().deepCopy(fields()[1].schema(), other.path);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.folderish)) {
        this.folderish = data().deepCopy(fields()[2].schema(), other.folderish);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.properties)) {
        this.properties = data().deepCopy(fields()[3].schema(), other.properties);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.hash)) {
        this.hash = data().deepCopy(fields()[4].schema(), other.hash);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.parent)) {
        this.parent = data().deepCopy(fields()[5].schema(), other.parent);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.type)) {
        this.type = data().deepCopy(fields()[6].schema(), other.type);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Message instance
     * @param other The existing instance to copy.
     */
    private Builder(org.nuxeo.ecm.platform.importer.kafka.avro.Message other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.title)) {
        this.title = data().deepCopy(fields()[0].schema(), other.title);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.path)) {
        this.path = data().deepCopy(fields()[1].schema(), other.path);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.folderish)) {
        this.folderish = data().deepCopy(fields()[2].schema(), other.folderish);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.properties)) {
        this.properties = data().deepCopy(fields()[3].schema(), other.properties);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.hash)) {
        this.hash = data().deepCopy(fields()[4].schema(), other.hash);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.parent)) {
        this.parent = data().deepCopy(fields()[5].schema(), other.parent);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.type)) {
        this.type = data().deepCopy(fields()[6].schema(), other.type);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'title' field.
      * @return The value.
      */
    public java.lang.CharSequence getTitle() {
      return title;
    }

    /**
      * Sets the value of the 'title' field.
      * @param value The value of 'title'.
      * @return This builder.
      */
    public org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder setTitle(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.title = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'title' field has been set.
      * @return True if the 'title' field has been set, false otherwise.
      */
    public boolean hasTitle() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'title' field.
      * @return This builder.
      */
    public org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder clearTitle() {
      title = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'path' field.
      * @return The value.
      */
    public java.lang.CharSequence getPath() {
      return path;
    }

    /**
      * Sets the value of the 'path' field.
      * @param value The value of 'path'.
      * @return This builder.
      */
    public org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder setPath(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.path = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'path' field has been set.
      * @return True if the 'path' field has been set, false otherwise.
      */
    public boolean hasPath() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'path' field.
      * @return This builder.
      */
    public org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder clearPath() {
      path = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'folderish' field.
      * @return The value.
      */
    public java.lang.Boolean getFolderish() {
      return folderish;
    }

    /**
      * Sets the value of the 'folderish' field.
      * @param value The value of 'folderish'.
      * @return This builder.
      */
    public org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder setFolderish(boolean value) {
      validate(fields()[2], value);
      this.folderish = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'folderish' field has been set.
      * @return True if the 'folderish' field has been set, false otherwise.
      */
    public boolean hasFolderish() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'folderish' field.
      * @return This builder.
      */
    public org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder clearFolderish() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'properties' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getProperties() {
      return properties;
    }

    /**
      * Sets the value of the 'properties' field.
      * @param value The value of 'properties'.
      * @return This builder.
      */
    public org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder setProperties(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[3], value);
      this.properties = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'properties' field has been set.
      * @return True if the 'properties' field has been set, false otherwise.
      */
    public boolean hasProperties() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'properties' field.
      * @return This builder.
      */
    public org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder clearProperties() {
      properties = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'hash' field.
      * @return The value.
      */
    public java.lang.CharSequence getHash() {
      return hash;
    }

    /**
      * Sets the value of the 'hash' field.
      * @param value The value of 'hash'.
      * @return This builder.
      */
    public org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder setHash(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.hash = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'hash' field has been set.
      * @return True if the 'hash' field has been set, false otherwise.
      */
    public boolean hasHash() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'hash' field.
      * @return This builder.
      */
    public org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder clearHash() {
      hash = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'parent' field.
      * @return The value.
      */
    public java.lang.CharSequence getParent() {
      return parent;
    }

    /**
      * Sets the value of the 'parent' field.
      * @param value The value of 'parent'.
      * @return This builder.
      */
    public org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder setParent(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.parent = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'parent' field has been set.
      * @return True if the 'parent' field has been set, false otherwise.
      */
    public boolean hasParent() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'parent' field.
      * @return This builder.
      */
    public org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder clearParent() {
      parent = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.CharSequence getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder setType(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.type = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public org.nuxeo.ecm.platform.importer.kafka.avro.Message.Builder clearType() {
      type = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public Message build() {
      try {
        Message record = new Message();
        record.title = fieldSetFlags()[0] ? this.title : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.path = fieldSetFlags()[1] ? this.path : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.folderish = fieldSetFlags()[2] ? this.folderish : (java.lang.Boolean) defaultValue(fields()[2]);
        record.properties = fieldSetFlags()[3] ? this.properties : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[3]);
        record.hash = fieldSetFlags()[4] ? this.hash : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.parent = fieldSetFlags()[5] ? this.parent : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.type = fieldSetFlags()[6] ? this.type : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
